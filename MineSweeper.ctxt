#BlueJ class context
comment0.target=MineSweeper
comment0.text=\n\ \ Simple\ 'Minesweeper'\ program.\n\ \ There\ is\ a\ grid\ of\ squares,\ some\ of\ which\ contain\ a\ mine.\n\ \ \n\ \ The\ user\ can\ click\ on\ a\ square\ to\ either\ expose\ it\ or\ to\n\ \ mark/unmark\ it.\n\ \ \n\ \ If\ the\ user\ exposes\ a\ square\ with\ a\ mine,\ they\ lose.\n\ \ Otherwise,\ it\ is\ uncovered,\ and\ shows\ a\ number\ which\ represents\ the\n\ \ number\ of\ mines\ in\ the\ eight\ squares\ surrounding\ that\ one.\n\ \ If\ there\ are\ no\ mines\ adjacent\ to\ it,\ then\ all\ the\ unexposed\ squares\n\ \ immediately\ adjacent\ to\ it\ are\ exposed\ (and\ so\ on)\n\n\ \ If\ the\ user\ marks\ a\ square,\ then\ they\ cannot\ expose\ the\ square,\n\ \ (unless\ they\ unmark\ it\ first)\n\ \ When\ all\ the\ squares\ without\ mines\ are\ exposed,\ the\ user\ has\ won.\n
comment1.params=arguments
comment1.target=void\ main(java.lang.String[])
comment1.text=\ \n\ Construct\ a\ new\ MineSweeper\ object\n\ and\ set\ up\ the\ GUI\n
comment10.params=v
comment10.target=void\ setMarking(boolean)
comment10.text=\n\ Respond\ to\ the\ Mark\ and\ Expose\ buttons\:\n\ Remember\ whether\ the\ user\ is\ currently\ "Marking"\ or\ "Exposing"\n\ Change\ the\ colour\ of\ the\ "Mark",\ "Expose"\ buttons\n
comment11.params=
comment11.target=void\ makeGrid()
comment11.text=\n\ Construct\ a\ grid\ with\ random\ mines.\n\ Compute\ the\ number\ of\ adjacent\ mines\ in\n
comment12.params=
comment12.target=void\ drawWin()
comment12.text=Draw\ a\ message\ telling\ the\ player\ they\ have\ won
comment13.params=
comment13.target=void\ drawLose()
comment13.text=\n\ Draw\ a\ message\ telling\ the\ player\ they\ have\ lost\n\ and\ expose\ all\ the\ squares\ and\ redraw\ them\n
comment14.params=
comment14.target=int[][]\ getVisibleState()
comment14.text=\n\ Return\ a\ grid\ of\ integers,\ showing\ the\ visible\ state\ of\ the\ board\:\n\ -1\ for\ any\ square\ that\ is\ not\ exposed\n\ 0\ -\ 8\ for\ any\ exposed\ square,\ saying\ how\ many\ mines\ are\ adjacent\ to\ it.\n
comment2.params=
comment2.target=void\ setupGUI()
comment2.text=Set\ up\ the\ GUI\:\ buttons\ and\ mouse\ to\ play\ the\ game
comment3.params=action\ x\ y
comment3.target=void\ doMouse(java.lang.String,\ double,\ double)
comment3.text=Respond\ to\ mouse\ events
comment4.params=row\ col
comment4.target=void\ tryExpose(int,\ int)
comment4.text=\ \n\ The\ player\ has\ clicked\ on\ a\ square\ to\ expose\ it\n\ -\ if\ it\ is\ already\ exposed\ or\ marked,\ do\ nothing.\n\ -\ if\ it's\ a\ mine\:\ lose\ (call\ drawLose())\ \n\ -\ otherwise\ expose\ it\ (call\ exposeSquareAt)\n\ then\ check\ to\ see\ if\ the\ player\ has\ won\ and\ call\ drawWon()\ if\ they\ have.\n\ (This\ method\ is\ not\ recursive)\n
comment5.params=row\ col
comment5.target=void\ exposeSquareAt(int,\ int)
comment5.text=\ \n\ \ Ensures\ that\ the\ square\ at\ row\ and\ col\ is\ exposed.\n\ \ If\ it\ is\ already\ exposed,\ do\ nothing.\n\ \ Otherwise,\n\ \ \ \ Expose\ it\ and\ redraw\ it.\n\ \ \ \ If\ the\ number\ of\ adjacent\ mines\ of\ this\ square\ is\ 0,\ then\ none\ of\n\ \ \ \ \ \ its\ neighbours\ have\ mines,\ so\n\ \ \ \ \ \ expose\ all\ its\ eight\ neighbours\ \n\ \ \ \ \ \ (and\ if\ they\ have\ no\ adjacent\ mines,\ expose\ their\ neighbours,\ and\ ....)\n\ \ \ \ \ \ (be\ careful\ not\ to\ go\ over\ the\ edges\ of\ the\ map)\n
comment6.params=
comment6.target=boolean\ hasWon()
comment6.text=\ \n\ Returns\ true\ if\ the\ player\ has\ won\:\n\ If\ any\ square\ without\ a\ mine\ is\ not\ exposed,\ then\ the\ player\ has\ not\ won\ yet.\n\ If\ all\ the\ squares\ without\ a\ mine\ have\ been\ exposed,\ then\ the\ player\ has\ won.\n\ (It\ doesn't\ matter\ if\ the\ squares\ with\ a\ mine\ have\ been\ marked\ or\ not).\n
comment7.params=s
comment7.target=int[][]\ readSquare(Square[][])
comment8.params=
comment8.target=void\ aiHelper()
comment9.params=row\ col
comment9.target=void\ mark(int,\ int)
comment9.text=\n\ Mark/unmark\ the\ square.\n\ If\ the\ square\ is\ exposed,\ don't\ do\ anything,\n\ If\ it\ is\ marked,\ unmark\ it\ and\ redraw,\n\ otherwise\ mark\ it\ and\ redraw.\n
numComments=15
